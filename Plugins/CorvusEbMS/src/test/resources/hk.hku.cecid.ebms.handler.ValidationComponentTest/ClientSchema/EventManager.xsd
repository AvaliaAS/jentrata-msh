<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:schema:service:EventManager.xsd" targetNamespace="urn:com:ssn:schema:service:EventManager.xsd" elementFormDefault="qualified">
	<xsd:element name="AckEvent" type="AckEventType"/>
	<xsd:element name="AckEventResponse" type="AckEventResponseType"/>
	<xsd:element name="AddEvent" type="AddEventType"/>
	<xsd:element name="AddEventResponse" type="EmptyType"/>
	<xsd:element name="AddEventNotes" type="EventNoteType"/>
	<xsd:element name="AddEventNotesResponse" type="AddEventNotesResponseType"/>
	<xsd:element name="ClearAlarm" type="ClearAlarmType"/>
	<xsd:element name="ClearAlarmResponse" type="AckEventResponseType"/>
	<xsd:element name="FindEvent" type="FindEventReqType"/>
	<xsd:element name="FindEventResponse" type="FindEventResponseType"/>
	<xsd:element name="GetTotalCountForFindEvent" type="GetTotalCountForFindEventReqType"/>
	<xsd:element name="GetTotalCountForFindEventResponse" type="TotalCountType"/>
	<xsd:element name="GetEventConfigRequest" type="GetEventConfigRequestType"/>
	<xsd:element name="GetEventConfigResponse" type="GetEventConfigResponseType"/>
	<xsd:element name="GetNextEventResultsPage" type="GetNextEventResultsPageType"/>
	<xsd:element name="GetNextEventResultsPageResponse" type="FindEventResponseType"/>
	<xsd:element name="GetCategories" type="EmptyType"/>
	<xsd:element name="GetCategoriesResponse" type="GetCategoriesResponseType"/>
	<xsd:element name="ListEventDefinitions" type="EmptyType"/>
	<xsd:element name="ListEventDefinitionsResponse" type="ListEventDefinitionsResponseType"/>
	<xsd:element name="ErrorCodeFault" type="ErrorCodeFaultType"/>
	<xsd:element name="GetAlarmStatus" type="GetAlarmStatusType"/>
	<xsd:element name="GetAlarmStatusResponse" type="GetAlarmStatusResponseType"/>
	<xsd:element name="Event" type="FindEventResultType"/>
	<xsd:element name="SaveCriteriaForFindEvent" type="GetTotalCountForFindEventReqType"/>
	<xsd:element name="SaveCriteriaForFindEventResponse" type="SaveCriteriaForFindEventResponseType"/>
	<xsd:element name="SetEventConfigRequest" type="SetEventConfigRequestType"/>
	<xsd:element name="SetEventConfigResponse" type="SetEventConfigResponseType"/>
	<!-- ComplextTypes in alplabetical order, followed by SimpleTypes -->

	<xsd:complexType name="AckEventType">        
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="EventLogId" type="xsd:long" maxOccurs="unbounded"/>            
				<xsd:element name="SearchKey" type="xsd:long"/>                          
			</xsd:choice>              
			<xsd:element name="AckType" type="AckTypeEnum"/>          
			<xsd:element name="AssignedTo" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="AckEventResponseType">
		<xsd:sequence>
			<xsd:element name="Note" type="xsd:string"/>
			<xsd:element name="InsertTS" type="xsd:string"/>
			<xsd:element name="UserName" type="xsd:string"/>            
		</xsd:sequence>    
	</xsd:complexType>

	<xsd:complexType name="AckType">
		<xsd:sequence>
			<xsd:element name="Name" type="AckTypeEnum"/>
		</xsd:sequence>  
		<xsd:attribute name="Operator" type="OperatorEnumeration" use="optional" default="SQL_EQUAL_TO"/>  
	</xsd:complexType>      

	<xsd:complexType name="AddEventType">
		<xsd:sequence>
			<xsd:element name="EventID" type="xsd:int"/>
			<xsd:element name="SourceID" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="AddEventNotesResponseType">
		<xsd:sequence>
			<xsd:element name="InsertTS" type="xsd:string"/>
			<xsd:element name="UserName" type="xsd:string"/>            
		</xsd:sequence>
	</xsd:complexType>      

	<!-- IsUserClearable and Status are meaningful only if isAlarm is true -->
	<xsd:complexType name="AlarmType">
		<xsd:attribute name="IsAlarm" type="xsd:boolean" use="optional"/>
		<xsd:attribute name="IsUserClearable" type="xsd:boolean" use="optional"/>
		<xsd:attribute name="Status" type="AlarmStatusEnum" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="CategoryType">
		<xsd:sequence>
			<xsd:element name="CategoryId" type="xsd:int"/>
			<xsd:element name="CategoryName" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>  

	<xsd:complexType name="ClearAlarmType">
		<xsd:sequence>
			<xsd:element name="ClearStatus" type="ActionableClearStatusEnum"/>
			<xsd:choice>
				<xsd:element name="EventLogID" type="xsd:long" maxOccurs="unbounded"/>
				<xsd:element name="EventSearchKey" type="xsd:long"/>
				<xsd:element name="DeviceClear" type="ClearDeviceAlarmType"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="ClearDeviceAlarmType">
		<xsd:sequence>
			<xsd:element name="EventID" type="xsd:int" minOccurs="0"/>
			<xsd:choice>
				<xsd:element name="MacID" type="xsd:string" maxOccurs="unbounded"/>
				<xsd:element name="DeviceSearchKey" type="xsd:long"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="CountsType">
		<xsd:sequence>
			<xsd:element name="ResolvedCount" type="xsd:long"/>
			<xsd:element name="UnresolvedCount" type="xsd:long"/>
			<xsd:element name="AssignedCount" type="xsd:long"/>
			<xsd:element name="AlarmingEventCount" type="xsd:long"/>
			<xsd:element name="EventOnlyCount" type="xsd:long"/>
			<xsd:element name="UserAlarmCount" type="xsd:long"/>
			<xsd:element name="SelfAlarmCount" type="xsd:long"/>
			<xsd:element name="DistinctUserCount" type="xsd:long"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="DefinedAckType">
		<xsd:sequence>
			<xsd:element name="Name" type="AckTypeEnum"/>
			<xsd:element name="LocalizedValue" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="DefinedCategoryType">    
		<xsd:attribute name="Id" type="xsd:int"/>
		<xsd:attribute name="Code" type="xsd:string" />
		<xsd:attribute name="Name" type="xsd:string"/>
		<xsd:attribute name="Desc" type="xsd:string"/>
	</xsd:complexType>

	<xsd:complexType name="DefinedJobOpType">
		<xsd:sequence>
			<xsd:element name="Name" type="JobOpTypeEnum" use="optional"/>
			<xsd:element name="LocalizedValue" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="DeviceSubtype">
		<xsd:sequence>
			<xsd:element name="Name" type="DeviceSubtypeEnum"/>
			<xsd:element name="LocalizedValue" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="EmptyType"/>

	<xsd:complexType name="ErrorCodeFaultType">
		<xsd:annotation>
			<xsd:documentation>
              The operation/ErrorCode currently returned are :
              FindEvent/too_many_rows
              FindEvent/invalid_user
              FindEvent/invalid_macid
              AckEvent/no_matching_events
              AddEventNotes/no_matching_events
              GetAlarmStatus/no_such_alarm_or_device
              AddEvent/invalid_event_id           
			</xsd:documentation>
		</xsd:annotation>                                  
		<xsd:sequence>
			<xsd:element name="ErrorCode" type="xsd:string"/>
			<xsd:element name="ErrorMessage" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>

	<!-- One event can belong to multiple categories -->
	<xsd:complexType name="EventCategoryType">
		<xsd:sequence>
			<xsd:element name="EventId" type="xsd:int"/>
			<xsd:element name="Category" type="CategoryType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="EventConfigSortMapType">
		<xsd:sequence>
			<xsd:element name="IsAscending" type="xsd:boolean"/>
			<xsd:element name="name" type="EventConfigSortKeyEnum"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="EventDefinitionType">
		<xsd:sequence>
			<xsd:element name="ID" type="xsd:int"/>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="Description" type="xsd:string"/>
			<xsd:element name="Severity" type="xsd:string"/>
			<xsd:element name="SourceType" type="xsd:string"/>
			<xsd:element name="EmitterType" type="xsd:string" />
			<xsd:element name="Category" type="xsd:string" maxOccurs="unbounded"/>            
			<xsd:element name="Age" type="xsd:int" minOccurs="0"/>
		</xsd:sequence>    
	</xsd:complexType>

	<xsd:complexType name="EventSimpleDefinitionType">
		<xsd:sequence>
			<xsd:element name="ID" type="xsd:int"/>
			<xsd:choice>
				<xsd:element name="Age" type="xsd:int" minOccurs="0"/>
				<xsd:element name="UseDefault" type="EmptyType" minOccurs="0"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="EventLocationType">
		<xsd:sequence>
			<xsd:element name="LocationId" type="xsd:long"/>
			<xsd:element name="UtilPremiseId" type="xsd:string"/>
			<xsd:element name="LocationType" type="DefinedLocationType" minOccurs="0"/>
			<xsd:element name="RegionCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Address1" type="xsd:string"/>
			<xsd:element name="Address2" type="xsd:string" minOccurs="0"/>
			<xsd:element name="City" type="xsd:string" />
			<xsd:element name="State" type="xsd:string"/>
			<xsd:element name="PostalCode" type="xsd:string"/>  
			<xsd:element name="CountryId" type="xsd:int"/>        
			<xsd:element name="LocationRouteId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="ServicePointId" type="xsd:long"/>
			<xsd:element name="UtilServicePointId" type="xsd:string"/>
			<xsd:element name="MeterLocCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="AccountId" type="xsd:long" minOccurs="0"/>
			<xsd:element name="UtilAccountId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Longitude" type="xsd:double" minOccurs="0"/>
			<xsd:element name="Latitude" type="xsd:double" minOccurs="0"/>
			<xsd:element name="SpLongitude" type="xsd:double" minOccurs="0"/>
			<xsd:element name="SpLatitude" type="xsd:double" minOccurs="0"/>
			<xsd:element name="ServicePointType" type="xsd:string" minOccurs="0"/>
			<xsd:element name="CustomerName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Attribute1" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Attribute2" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Attribute3" type="xsd:string" minOccurs="0"/>
			<xsd:element name="DistributionNetworkTransformerID" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>    
	</xsd:complexType>    

	<xsd:complexType name="EventNoteType">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="EventLogId" type="xsd:long" maxOccurs="unbounded"/>            
				<xsd:element name="SearchKey" type="xsd:long"/>                          
			</xsd:choice>              
			<xsd:element name="Note" type="xsd:string" minOccurs="0"/>  
		</xsd:sequence>      
	</xsd:complexType>  

	<xsd:complexType name="EventType">
		<xsd:sequence>
			<xsd:element name="ID" type="xsd:int"/>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="Description" type="xsd:string"/>
			<xsd:element name="Severity" type="LocalizedConstantType"/>
			<xsd:element name="SourceType" type="LocalizedConstantType"/>
			<xsd:element name="Category" type="xsd:string" maxOccurs="unbounded"/>
			<xsd:element name="Age" type="xsd:int"/>
			<xsd:element name="IsUserClearable" type="xsd:boolean"/>
			<xsd:element name="UsesDefaultAge" type="xsd:boolean"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="DefinedLocationType">
		<xsd:sequence>
			<xsd:element name="Name" type="LocationTypeEnum"/>
			<xsd:element name="LocalizedValue" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="FindEventReqType">
		<xsd:annotation>
			<xsd:documentation>
               Only one of GroupedResults and NonGroupedResults should be supplied.
               Indicates if results need to be grouped or not.
			</xsd:documentation>
		</xsd:annotation>                                  
		<xsd:sequence>
			<xsd:element name="EventLogId" type="xsd:long" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="EventId" type="xsd:long" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="EventStartTime" type="xsd:string" minOccurs="0"/>
			<xsd:element name="EventEndTime" type="xsd:string" minOccurs="0"/>
			<xsd:element name="SourceName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="SourceId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="SourceType" type="SourceTypeEnum" minOccurs="0"/>
			<xsd:element name="EmitterName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="EmitterId" type="xsd:string" minOccurs="0"/>            
			<xsd:element name="EmitterType" type="SourceTypeEnum" minOccurs="0"/>
			<xsd:element name="Severity" type="SeverityTypeEnum" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="EventVisibility"  type="xsd:int" minOccurs="0"/>
			<xsd:element name="EventCategoryType" type="EventCategoryTypeEnum" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="JobId" type="xsd:long" minOccurs="0"/>
			<xsd:element name="Ack" type="AckType" minOccurs="0"/>  
			<xsd:element name="UpdatedBy" type="xsd:string" minOccurs="0"/>
			<xsd:element name="AssignedTo" type="xsd:string" minOccurs="0"/>            
			<xsd:element name="SourceUIQDeviceState" type="UIQDeviceStateType" minOccurs="0"/>
			<xsd:element name="Alarm" type="AlarmType" minOccurs="0"/>
			<xsd:element name="EventToClear" type="xsd:int" minOccurs="0"/>
			<xsd:element name="GroupedResults" type="GroupedReqType" minOccurs="0"/>
			<xsd:element name="NonGroupedResults" type="NonGroupedReqType" minOccurs="0"/>            
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="GetTotalCountForFindEventReqType">
		<xsd:sequence>
			<xsd:element name="SearchParameters" type="FindEventReqType"/>
		</xsd:sequence> 
	</xsd:complexType>

	<xsd:complexType name="TotalCountType">
		<xsd:sequence>
			<xsd:element name="RowCount" type="xsd:int"/>
		</xsd:sequence> 
	</xsd:complexType>

	<!-- Along with Search Results, list of event_id -> Category mappings are also returned -->
	<xsd:complexType name="GetEventConfigRequestType">
		<xsd:sequence>
			<xsd:element name="SortMap" type="GetEventConfigSortMap" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="GetEventConfigResponseType">
		<xsd:sequence>
			<xsd:element name="EventList" type="ListEventResponseType" minOccurs="0"/>
			<xsd:element name="DefaultAge" type="xsd:int"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="GetEventConfigSortMap">
		<xsd:sequence>
			<xsd:element name="Name" type="GetEventSortKeyEnum"/>
			<xsd:element name="IsAscending" type="xsd:boolean"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="FindEventResponseType">
		<xsd:annotation>
			<xsd:documentation>
                Either Results or GroupedResults will be returned, not both.
                Also, GroupedResults do not support pagination, so searchKey will be null with grouping.
			</xsd:documentation>
		</xsd:annotation>                  
		<xsd:sequence>
			<xsd:element name="ResultCount" type="xsd:int" minOccurs="0"/>
			<xsd:element name="ExceededMaximumNumberOfRows" type="xsd:boolean" minOccurs="0" default="false"/>
			<xsd:element name="SearchKey" type="xsd:long" minOccurs="0"/>
			<xsd:element name="Results" type="NonGroupedResultType" minOccurs="0"/>
			<xsd:element name="GroupedResults" type="GroupedResultsType" minOccurs="0"/>            
			<xsd:element name="EventCategories" type="EventCategoryType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="ErrorsOccurred" type="xsd:boolean"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="FindEventResultType">
		<xsd:sequence>
			<xsd:element name="EventLogId" type="xsd:long"/>
			<xsd:element name="EventId" type="xsd:int"/>            
			<xsd:element name="EventName" type="xsd:string"/>          
			<xsd:element name="EventDesc" type="xsd:string"/>          
			<xsd:element name="EventTime" type="TimestampType"/>
			<xsd:element name="SourceId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="SourceName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="SourceDeviceType" type="DeviceSubtype" minOccurs="0"/>
			<xsd:element name="SourceFeederUtilID" type="xsd:string" minOccurs="0"/>
			<xsd:element name="SourceSubstationUtilID" type="xsd:string" minOccurs="0"/>
			<xsd:element name="SourceUIQState" type="UIQDeviceStateType" minOccurs="0"/>
			<xsd:element name="SourceUtilState" type="UtilDeviceStateType" minOccurs="0"/>
			<xsd:element name="SourceUtilID" type="xsd:string" minOccurs="0"/>
			<xsd:element name="SourceType" type="SourceType"/>
			<xsd:element name="ProxyDeviceType" type="DeviceSubtype" minOccurs="0"/>
			<xsd:element name="ProxyUtilID" type="xsd:string" minOccurs="0"/>
			<xsd:element name="EmitterId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="EmitterName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="EmitterType" type="SourceType"/>
			<xsd:element name="EventText" type="xsd:string"/>
			<xsd:element name="Severity" type="SeverityType" minOccurs="0"/>
			<xsd:element name="EventVisibility"  type="xsd:int" minOccurs="0"/>
			<xsd:element name="NumOfDaysToKeep" type="xsd:int"/>
			<xsd:element name="JobId" type="xsd:long" minOccurs="0"/>
			<xsd:element name="JobOpType" type="DefinedJobOpType" minOccurs="0"/>
			<!-- If this is a user-clearable alarm and is being cleared, the ID of the job that is clearing it -->
			<xsd:element name="ClearingJobId" type="xsd:long" minOccurs="0"/>            
			<xsd:element name="Ack" type="DefinedAckType" minOccurs="0"/>
			<xsd:element name="UpdatedBy" type="xsd:string" minOccurs="0"/>
			<xsd:element name="AssignedTo" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Alarm" type="AlarmType" minOccurs="0"/>
			<!-- If this is a clearing event, the ID of the event that is cleared by this one -->
			<xsd:element name="EventToClear" type="xsd:int" minOccurs="0"/>
			<xsd:element name="Notes" type="NoteType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="LocationDetails" type="EventLocationType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="GetCategoriesResponseType">
		<xsd:sequence>
			<xsd:element name="Category" type="DefinedCategoryType" maxOccurs="unbounded"/>
		</xsd:sequence>            
	</xsd:complexType>

	<xsd:complexType name="GetAlarmStatusType">
		<xsd:sequence>
			<xsd:element name="AlarmID" type="xsd:long"/>
			<xsd:element name="MacID" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="GetAlarmStatusResponseType">
		<xsd:sequence>
			<xsd:element name="Status" type="AlarmStatusEnum"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="GetNextEventResultsPageType">
		<xsd:sequence>
			<xsd:element name="SearchKey" type="xsd:long"/>
			<xsd:element name="StartRow" type="xsd:int" />
			<xsd:element name="EndRow" type="xsd:int" />  
			<xsd:element name="SortCol" type="NonGroupedSortMap" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="GetPremiseDetails" type="xsd:boolean" default="false" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="GroupedReqType">
		<xsd:annotation>
			<xsd:documentation>
               For grouped results, there is no pagination,
               so no start and end row. They are sorted by Severity.
			</xsd:documentation>
		</xsd:annotation>                          
	</xsd:complexType>

	<xsd:complexType name="GroupedResultsType">
		<xsd:sequence>
			<xsd:element name="GroupedResult" type="GroupedResultType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="GroupedResultType">
		<xsd:sequence>
			<xsd:element name="EventId" type="xsd:int"/>
			<xsd:element name="EventName" type="xsd:string"/>                      
			<xsd:element name="EventDesc" type="xsd:string"/>
			<xsd:element name="Count" type="xsd:int"/>            
			<xsd:element name="MostRecentOccurence" type="TimestampType"/>
			<xsd:element name="OldestOccurence" type="TimestampType"/>
			<xsd:element name="Severity" type="SeverityType" minOccurs="0"/>
			<xsd:element name="EventVisibility"  type="xsd:int" minOccurs="0"/>
			<xsd:element name="Counts" type="CountsType"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="ListEventDefinitionsResponseType">
		<xsd:sequence>
			<xsd:element name="Event" type="EventDefinitionType" maxOccurs="unbounded"/>            
		</xsd:sequence>    
	</xsd:complexType>

	<xsd:complexType name="ListEventResponseType">
		<xsd:sequence>
			<xsd:element name="Event" type="EventType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="ListSimpleEventDefinitionsResponseType">
		<xsd:sequence>
			<xsd:element name="Event" type="EventSimpleDefinitionType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="LocalizedConstantType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element name="LocalizedValue" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="NonGroupedReqType">
		<xsd:annotation>
			<xsd:documentation>
               For non-grouped results, there is pagination, so 
               start and end row is needed along with sort column. 
			</xsd:documentation>
		</xsd:annotation>                                  
		<xsd:sequence>
			<xsd:element name="StartRow" type="xsd:int" />
			<xsd:element name="EndRow" type="xsd:int" />                        
			<xsd:element name="SortCol" type="NonGroupedSortMap" minOccurs="0" maxOccurs="unbounded"/>                        
			<xsd:element name="GetPremiseDetails" type="xsd:boolean" default="false" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="NonGroupedResultType">
		<xsd:sequence>
			<xsd:element name="Result" type="FindEventResultType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="Counts" type="CountsType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="NonGroupedSortMap">
		<xsd:sequence>
			<xsd:element name="Name" type="NonGroupedSortColumnName"/>
			<xsd:element name="IsAsc" type="xsd:boolean"/>
		</xsd:sequence>
	</xsd:complexType>  

	<xsd:complexType name="NoteType">
		<xsd:sequence>
			<xsd:element name="AckNoteId" type="xsd:long"/>
			<xsd:element name="Note" type="xsd:string"/>
			<xsd:element name="UserName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="NoteInsertTs" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="SaveCriteriaForFindEventResponseType">
		<xsd:sequence>
			<xsd:element name="CriteriaKey" type="xsd:long"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="SetEventConfigRequestType">
		<xsd:sequence>
			<xsd:element name="EventList" type="ListSimpleEventDefinitionsResponseType"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="SetEventConfigResponseType">
		<xsd:sequence>
			<xsd:element name="EmptyResponse" type="EmptyType"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="SeverityType">
		<xsd:sequence>
			<xsd:element name="Name" type="SeverityTypeEnum"/>
			<xsd:element name="LocalizedValue" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="SourceType">
		<xsd:sequence>
			<xsd:element name="Name" type="SourceTypeEnum"/>
			<xsd:element name="LocalizedValue" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="TimestampType">
		<xsd:annotation>
			<xsd:documentation>
              Date is a string containing the date, formatted as
              yyyy-MM-ddTHH:mm:ss.(SSS)?((+|-)tt:tt).
              This conforms to ISO 8601.

              For example:
              2005-12-15T13:35:03
              2005-12-15T13:35:03-08:00
              2005-12-15T13:35:03.123
              2005-12-15T13:35:03.123-08:00

              Localized date is a string containing the 
              date formatted for the user's locale.
              The formatting is the Java default for the locale
              for the MT installation.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Date" type="xsd:string"/>
			<xsd:element name="LocalizedDate" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>    

	<xsd:complexType name="UIQDeviceStateType">
		<xsd:sequence>
			<xsd:element name="Name" type="UiqDeviceStateTypeEnum"/>
			<xsd:element name="LocalizedValue" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>  
		<xsd:attribute name="Operator" type="OperatorEnumeration" use="optional" default="SQL_EQUAL_TO"/>  
	</xsd:complexType>

	<xsd:complexType name="UtilDeviceStateType">
		<xsd:sequence>
			<xsd:element name="Name" type="UtilDeviceStateTypeEnum"/>
			<xsd:element name="LocalizedValue" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- SimpleTypes, in alphabetical order -->

	<xsd:simpleType name="AckTypeEnum"> 
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="EVENT_RESOLVED"/>
			<xsd:enumeration value="EVENT_UNRESOLVED"/>
			<xsd:enumeration value="EVENT_ASSIGNED"/>                  
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="ActionableClearStatusEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ALARM_RINGING" />
			<xsd:enumeration value="ALARM_CLEARED" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="AlarmStatusEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ALARM_RINGING" />
			<xsd:enumeration value="ALARM_CLEAR_IN_PROGRESS" />
			<xsd:enumeration value="ALARM_CLEARED" />
			<xsd:enumeration value="ALARM_CLEAR_FAILED" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="DeviceSubtypeEnum"> 
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="DID_SUBTYPE_KV2C"/>
			<xsd:enumeration value="DID_SUBTYPE_KV2"/>
			<xsd:enumeration value="DID_SUBTYPE_I210DT"/>
			<xsd:enumeration value="DID_SUBTYPE_I210EO"/>
			<xsd:enumeration value="DID_SUBTYPE_I210CRD"/>
			<xsd:enumeration value="DID_SUBTYPE_I210C"/>
			<xsd:enumeration value="DID_SUBTYPE_ICON"/>
			<xsd:enumeration value="DID_SUBTYPE_I210RD"/>
			<xsd:enumeration value="DID_SUBTYPE_KV2C_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_I210EO_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_ICON_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_I210RD_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_I210CRD_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_I210C_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_LG_S4E_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_LG_AX_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_LG_AXSD_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_ICM500_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_SPRINT200_HAN"/>
			<xsd:enumeration value="DID_SUBTYPE_RELAY" />
			<xsd:enumeration value="DID_SUBTYPE_IMU" />
			<xsd:enumeration value="DID_SUBTYPE_GATEWAY" />	
			<xsd:enumeration value="DID_SUBTYPE_BRIDGE_STANDALONE" />					
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="EventConfigSortKeyEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="EventID"/>
			<xsd:enumeration value="Name"/>
			<xsd:enumeration value="Severity"/>
			<xsd:enumeration value="Source"/>
			<xsd:enumeration value="IsClearable"/>
		</xsd:restriction>
	</xsd:simpleType>

	<!-- This mirrors an enum of the same name in JobManager.wsdl -->
	<xsd:simpleType name="EventCategoryTypeEnum"> 
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="EVENT_CAT_METER_READ"/>
			<xsd:enumeration value="EVENT_CAT_METER_COMM"/>
			<xsd:enumeration value="EVENT_CAT_DEVICE_PING"/>                  
			<xsd:enumeration value="EVENT_CAT_DEVICE_CONFIG"/>                  
			<xsd:enumeration value="EVENT_CAT_NIC_EVENT"/>                  
			<xsd:enumeration value="EVENT_CAT_METER_EVENT"/>                  
			<xsd:enumeration value="EVENT_CAT_UIQ_PROCESS"/>                  
			<xsd:enumeration value="EVENT_CAT_DEVICE_REG"/>                  
			<xsd:enumeration value="EVENT_CAT_IMU_EVENT"/>                  
			<xsd:enumeration value="EVENT_CAT_UIQ_IMPORT"/>                              
			<xsd:enumeration value="EVENT_CAT_GATEWAY_STATUS"/>                  
			<xsd:enumeration value="EVENT_CAT_JOB"/>                  
			<xsd:enumeration value="EVENT_CAT_DBMS"/>                  
			<xsd:enumeration value="EVENT_CAT_IMPORT"/>    
			<xsd:enumeration value="EVENT_CAT_BILLING_CYCLE_IMPORT"/>                  
			<xsd:enumeration value="EVENT_CAT_DEVICE_IMPORT"/>                  
			<xsd:enumeration value="EVENT_CAT_LOCATION_IMPORT"/>                  
			<xsd:enumeration value="EVENT_CAT_ROUTE_IMPORT"/>  
			<xsd:enumeration value="EVENT_CAT_DEVICE_ROUTE"/>              
			<xsd:enumeration value="EVENT_CAT_EXPORT"/>
			<xsd:enumeration value="EVENT_CAT_REMOTE_SIGNALING"/>  
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="GetEventSortKeyEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Age"/>
			<xsd:enumeration value="EventID"/>
			<xsd:enumeration value="IsUserClearable"/>
			<xsd:enumeration value="SeverityID"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="JobOpTypeEnum"> 
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="JOB_OP_TYPE_CRON_JOB"/>
			<xsd:enumeration value="JOB_OP_TYPE_METER_READ"/>
			<xsd:enumeration value="JOB_OP_TYPE_EXPORT"/>
			<xsd:enumeration value="JOB_OP_TYPE_IMPORT"/>
			<xsd:enumeration value="JOB_OP_TYPE_REPORT"/>
			<xsd:enumeration value="JOB_OP_TYPE_PING"/>
			<xsd:enumeration value="JOB_OP_TYPE_NCC_ALARM_CLEAR"/>
			<xsd:enumeration value="JOB_OP_TYPE_DEV_PROG_READ"/>
			<xsd:enumeration value="JOB_OP_TYPE_REMOTE_PROVISION"/>
			<xsd:enumeration value="JOB_OP_TYPE_ARB_METER_COMMAND"/>
			<xsd:enumeration value="JOB_OP_TYPE_BRIDGE_CONFIGURE"/>
			<xsd:enumeration value="JOB_OP_TYPE_TRGGR_BRDG_NTFCTN"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="LocationTypeEnum"> 
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="LOCATION_TYPE_PREMISE" />
			<xsd:enumeration value="LOCATION_TYPE_NETWORK" />
			<xsd:enumeration value="LOCATION_TYPE_POLE" />
			<xsd:enumeration value="LOCATION_TYPE_TRANSFORM" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="NonGroupedSortColumnName"> 
		<xsd:restriction base="xsd:string">            
			<xsd:enumeration value="EventTime" />
			<xsd:enumeration value="SourceId"/>
			<xsd:enumeration value="SourceName"/>
			<xsd:enumeration value="EmitterId"/>
			<xsd:enumeration value="EmitterName" />
			<xsd:enumeration value="Severity" />
			<xsd:enumeration value="NumOfDaysToKeep" />
			<xsd:enumeration value="JobId"  />
			<xsd:enumeration value="AckId" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="OperatorEnumeration">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="SQL_EQUAL_TO"/>
			<xsd:enumeration value="SQL_NOT_EQUAL_TO"/>
		</xsd:restriction>  
	</xsd:simpleType>      

	<!-- This mirrors an enum of the same name in JobManager.wsdl -->
	<xsd:simpleType name="SeverityTypeEnum"> 
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="EVENT_SEVERITY_EMERGENCY"/>
			<xsd:enumeration value="EVENT_SEVERITY_ALERT"/>
			<xsd:enumeration value="EVENT_SEVERITY_CRITICAL"/>                  
			<xsd:enumeration value="EVENT_SEVERITY_ERROR"/>                  
			<xsd:enumeration value="EVENT_SEVERITY_WARNING"/>                  
			<xsd:enumeration value="EVENT_SEVERITY_NOTICE"/>                  
			<xsd:enumeration value="EVENT_SEVERITY_INFORMATION"/>                  
			<xsd:enumeration value="EVENT_SEVERITY_DEBUG"/>                  
			<xsd:enumeration value="EVENT_SEVERITY_CLEAR"/>                
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="SourceTypeEnum"> 
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="EVENT_SRC_TYPE_METER"/>
			<xsd:enumeration value="EVENT_SRC_TYPE_METER_NIC"/>
			<xsd:enumeration value="EVENT_SRC_TYPE_IMU"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_IMU_NIC"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_RELAY"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_RELAY_NIC"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_NETWORK_DEVICE"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_GATEWAY"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_GATEWAY_NIC"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_DATABASE"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_TRANSPORT_LAYER"/>                                                                                                                  
			<xsd:enumeration value="EVENT_SRC_TYPE_DEVICE_MANAGER"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_NETWORK_MANAGER"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_DAL"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_REPORTS_MANAGER"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_EVENTS_MANAGER"/>                                                                                                                              
			<xsd:enumeration value="EVENT_SRC_TYPE_ALARMS_MANAGER"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_JOB_LAYER"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_SECURITY_LAYER"/>                  
			<xsd:enumeration value="EVENT_SRC_TYPE_INTERFACE_LAYER"/>  
			<xsd:enumeration value="EVENT_SRC_TYPE_USER_INTERFACE"/>  
			<xsd:enumeration value="EVENT_SRC_TYPE_NIC"/>  
			<xsd:enumeration value="EVENT_SRC_TYPE_MT_IMPORT"/>  
			<xsd:enumeration value="EVENT_SRC_TYPE_STATE_MONITOR"/>    
			<xsd:enumeration value="EVENT_SRC_TYPE_RESULT_PROCESS"/>                          
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="UiqDeviceStateTypeEnum"> 
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="UIQ_DEVICE_STATE_NEW" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_INSTALLED" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_DISCOVERED" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_INITIALIZING" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_INIT_FAILED" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_INITIALIZED" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_ACTIVE" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_INACTIVE" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_UNREACHABLE" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_REMOVED" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_MAINTENANCE" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_OPTIMIZE" />            
			<xsd:enumeration value="UIQ_DEVICE_STATE_RETIRED" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_DISCONNECTED" />
			<xsd:enumeration value="UIQ_DEVICE_STATE_SVC_DISCONECT" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="UtilDeviceStateTypeEnum"> 
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="UTL_DEVICE_STATE_NEW" />
			<xsd:enumeration value="UTL_DEVICE_STATE_ACTIVE" />
			<xsd:enumeration value="UTL_DEVICE_STATE_INACTIVE" />			
			<xsd:enumeration value="UTL_DEVICE_STATE_MAINTENANCE" />
			<xsd:enumeration value="UTL_DEVICE_STATE_OPTIMIZE" />			
			<xsd:enumeration value="UTL_DEVICE_STATE_RETIRED" />
			<xsd:enumeration value="UTL_DEVICE_STATE_DISCONNECTED" />
			<xsd:enumeration value="UTL_DEVICE_STATE_SVC_DISCONECT" />
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>